Servlet과 DB의 연동하기 위한 Oracle DBMS 

   * 서블릿같은 웹프로그램의 가장 중요한 작업은 데이터를 CRUD하는 것임. 이 데이터들을 체계적으로 저장하는 Database와 연동하는 수업진행   PHP-MySql 연동하듯이..

   3.1) Servlet과 가장 궁합이 잘 맞는 DBMS - Oracle 설치하기 - oracle.com

       - 무료버전 XE버전으로 설치 : Oracle Database Express Edition (XE) 버전으로 설치.  -- https://www.oracle.com/kr/database/technologies/appdev/xe.html --                  

       ** JDBC와 오라클 드라이버의 호환 버전을 고려해야 함. [ https://www.oracle.com/database/technologies/faq-jdbc.html  ]  -- JDK 17 에서는 11g 사용이 안될 듯. ojdbc.jar 가 없음.

         # 21c XE 버전으로 다운로드. -- JDK17 관련 ojdbc.jar가 존재함.   : https://www.oracle.com/kr/database/technologies/xe-downloads.html            
         # 11g버전 : https://www.oracle.com/database/technologies/xe-prior-release-downloads.html    

       - 압축파일 다운로드 후에 압출풀고 설치파일[ setup.exe ]을 더블클릭하여 설치진행..[ 반드시 관리자 모드로 실행해야 함 ]
         > 설치경로는 기본위치.
         > system 계정의 비밀번호(관리자계정 비번)  ---- [ 오라클 DBMS 설치할 때 입력한 이 비밀번호는 꼭 기억해야 합니다. 잊어버린 비밀번호를 찾아내는 것은 불가능 ]

           # SYS: Oracle DBMS의 모든 권한을 가진 최고 관리자 계정으로 모든 관리 기능을 수행할 수 있음, 오라클 DB 설치 시 자동으로 생성됨.
           # SYSTEM: 일반적인 DB 관리를 하는데 사용하는 일반 관리자 계정으로 모든 관리 기능을 수행할 수 있지만 백업 및 복구와 같은 고급 관리 작업은 수행할 수 없음, 오라클 DB가 설치될 때 자동으로 생성됨

         > 방화벽 접근 허용하고 설치 기다리기 -- 상당히 오래걸림.


     3.2) Oracle DB 클라이언트 프로그램
        #1 CLI환경 : SQL Plus   -- 오라클 설치할때 기본 설치됨
        #2 GUI환경 : SQL Developer  -- 별도 다운도드 후 설치  


        * 먼저 CLI환경의 SQL plus를 이용하여 Oracle DBMS 사용해보기

       3.2.1) cmd(명령프롬프트)실행
       3.2.2) sqlplus 프로그램 실행

           c:\Users\mrhi > sqlplus    

           처음 접속하는만큼 기본 관리자 계정으로 접속 -> system
            Enter user-name : system
            Enter password : *****   [ 설치할때 지정한 비밀번호 ]

           SQL>   라고 나오면 DBMS에 접속된 것임

	# SQL 언어의 3가지 종류
	 1] DDL  - create, alter, drop [ 사용자계정 or 데이터베이스 or 테이블 ]   - Data Definition Language       데이터 정의 언어
	 2] DCL  - grant, revoke, commit, rollback[ 권한 부여, 커밋, 롤백 ]         - Data Control Language          데이터 제어 언어
	 3] DML - insert, select, update, delete [ CRUD ]                              - Data Manipulation Language   데이터 조작 언어


        3.2.3) 기본 사용자계정 만들기 

          * 사용자계정 만드는 쿼리문 - DDL 

            오라클 12.1 버전부터 멀티 테넌트 기능을 사용할 수 있다. 
            멀티 테넌트 기능을 사용하면 데이터베이스가 CDB(Container DB)로 동작한다. 
            CDB에서 사용자를 생성할 때는 c## 접두어를 붙여야 함.

                [ 12c이전버전 : create user 사용자명 identified by 비밀번호; ]
                [ 12c이후버전 : create c##user 사용자명 identified by 비밀번호; ]

              SQL> create user c##mrhi identified by 1234;

           ## 다만 매번 사용자명 앞에 c## 접두어를 붙이는게 실다면...? #########
               
              SQL>  ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
             
               로 설정변경 한 후 사용! 그럼. 교재처럼. c##없이 실습 가능  
           ########################################################             
 

          * 만들어진 사용자 계정에게 일반적인 작업을 할 수 있는 권한을 부여(grant) - DCL
                [  12c이전버전 : grant resource, connect, dba to c##사용자계정; ]
                [  12c이후버전 : grant resource, connect, dba to c##사용자계정; ]
          
              SQL> grant resource, connect, dba to mrhi;

	       # ROLE(롤) : 유저에게 권한을 부여하는 집합(기능들의 모음) ... 종류
		* connect : 접속권한
		* resource : DDL, DML 권한
		* dba : 모든권한. 관리자 권한 (관리자계정에만 부여하는 것이 일반적임)

          * 이제 사용자 계정으로 다시 접속하기 위해 프로그램 나가기 
    
              SQL> exit;

              c:\Users\mrhi > sqlplus 

               Enter user-name : mrhi
               Enter password : 1234

            SQL>   라고 나오면 DBMS에 접속된 것임


           * 참고로 계정 삭제는?
             SQL> drop user mrhi;
             SQL> revoke user mrhi cascade;

           * 권한을 해제하려면? 
             SQL> revoke connect, resource, dba from user;


           * 사용자계정 보기
            SQL> select username from all_users;



         3.2.4) 기본적인 CRUD 작업 해보기 - DML

            * 사용자계정 로그인 - mrhi

            * 현재 사용자계정의 테이블들 조회하기 

            SQL> SELECT * FROM TAB;      OR     SQL> SELECT TNAME FROM TAB;

               #참고: 모든계정의 테이블목록 SELECT * FROM ALL_TABLES;   SELECT * FROM USER_TABLES;####


            * 테이블 만들기 - CREATE    (대소문자 구분없음)         
              
             SQL> CREATE TABLE board (board_no NUMBER(10), title VARCHAR2(20) NOT NULL, msg VARCHAR2(4000), write_date DATE, CONSTRAINT no_pk PRIMARY KEY(board_no));


            * 테이블 구조 보기 -  DESC 테이블명;


            * 테이블 삭제 - DROP TABLE 테이블명


            * 테이블 수정 - ALTER TABLE 테이블명 ~     ADD, DROP, MODIFY

              > 작성일 (WRITE_DATE)의 날짜를 기본 현재시간으로 저장되도록 테이블의 컬룸 타입을 수정  ---- default sysdate

              SQL> ALTER TABLE BOARD MODIFY(WRITE_DATE DATE DEFAULT SYSDATE);


            * BOARD_NO의 값을 자동증가 하도록. SEQUENCE 추가하기 [ MYSQL의 AUTO INCREMENT 효과지만. 작성법은 많이 다름 ]

              SQL> CREATE SEQUENCE 자동증가변수명 INCREMENT BY 1 START WITH 1;
              SQL> CREATE SEQUENCE AUTO_NO INCREMENT BY 1 START WITH 1;

                  --> INSERT 할때 AUTO_NO.NEXTVAL 값을 주면 됨.

            * 테이블에 데이터 삽입 ( INSERT)
          
               SQL> INSERT INTO BOARD(BOARD_NO,TITLE,MSG) VALUES(AUTO_NO.NEXTVAL,'HELLO','NICE TO MEET YOU');

           
           * 테이블의 모든 레코드 보기 ( SELECT )

               SQL> SELECT * FROM BOARD;

           
            * 저장 날짜에 시간은 없음. 데이터 타입을 변경 DATE --> TIMESTAMP

               SQL> ALTER TABLE BOARD MODIFY(WRITE_DATE TIMESTAMP DEFAULT SYSDATE);

          
            *  두번째 데이터 삽입하여 시간 기록 확인. TIMESTEMP(소수점시간 자리수 - DEFAULT 6자리)

              SQL> INSERT INTO BOARD(BOARD_NO,TITLE,MSG) VALUES(AUTO_NO.NEXTVAL,'GOOD','안녕하세요');  


            * 두번째 데이터의 TITLE 값 변경 ( UPDATE )
             
              SQL> UPDATE BOARD SET TITLE='안녕하세요' WHERE BOARD_NO=2;


             * 두번째 데이터 삭제 ( DELETE )
             
              SQL> DELETE FROM BOARD WHERE BOARD_NO=2;

             
             * 값을 저장할때 모든 컬룸의 값을 지정하면 컬룸명생략 가능

              SQL> INSERT INTO BOARD VALUES(AUTO_NO.NEXTVAL, 'HELLO', 'NICE TO MEET YOU', SYSDATE);



          # [Oracle] sqlplus Linesize, Pagesize, Column 사이즈 조절하기
	set linesize 100    : 행의 사이즈
	set pagesize 10     :  한 페이지에 출력될 행의 갯수
	column 컬럼 format a10 : 컬럼 사이즈
	desc 테이블 : 테이블 컬럼값 확인

             SQL> COLUMN TITLE FORMAT A20;
             SQL> COL MSG FORMAT A50;
             SQL> COL WRITE_DATE FORMAT A20;


	* 시간 뒤에 밀리초 단위의 자리수를 0 으로...
	SQL> ALTER TABLE BOARD MODIFY(WRITE_DATE TIMESTAMP(0) DEFAULT SYSDATE);




	# 새로운 테이블(MEMBER)만들어 보기  ( USER_ID, USER_PW, USER_NAME, USER_EMAIL, REG_DATE)

	 SQL> CREATE TABLE MEMBER(USER_ID VARCHAR2(20) NOT NULL, USER_PW VARCHAR2(20) NOT NULL, USER_NAME VARCHAR2(20) NOT NULL, USER_EMAIL VARCHAR2(20), REG_DATE TIMESTAMP(0) DEFAULT SYSDATE);

	  * 위 테이블 생성문에는 PRIMARY KEY 지정이 없음. [ USER_ID 를 PK로 지정할 예정 ]

	 * PK가 없기 때문에 같은 ID를 가진 데이터의 삽입이 가능함 - 무결성 저하...

	SQL> INSERT INTO MEMBER VALUES('aa','11','sam','aa@aa.com',SYSDATE);
	SQL> INSERT INTO MEMBER VALUES('aa','11','sam','aa@aa.com',SYSDATE);

	 * 같은 회원데이터가 추가되는 문제가 발생함.


	 * 테이블의 USER_ID 에 PK 추가..

	SQL> ALTER TABLE MEMBER ADD PRIMARY KEY (USER_ID);

	# 이미 중복된 데이터가 있다면 PK 적용안됨. 
            # 데이터 모두 삭제 [ DELETE or TRUNCATE ]

	SQL> TRUNCATE TABLE MEMBER;


	 * PK 다시 적용하고. 중복된 USER_ID 로 데이터 입력해보기

	SQL> INSERT INTO MEMBER VALUES('aa','11','sam','aa@aa.com',SYSDATE);
	SQL> INSERT INTO MEMBER VALUES('aa','11','sam','aa@aa.com',SYSDATE);

		-----------------------------------
		1행에 오류:
		ORA-00001: 무결성 제약 조건(MRHI.SYS_C008323)에 위배됩니다
		-----------------------------------


	3.2.5) Oracle GUI 설치 및 사용 - sqlplus CLI를 사용하는 것이 조금 불편함. [ SQL Developer ] - https://www.oracle.com/database/sqldeveloper/technologies/download/

	 * .zip [ JDK포함되지 않은 버전 다운로드] - 압축해제하면 바로 사용 ( 마치 이클립스처럼 )  - 미리 설치된 JDK 의 path를 입력해야함. [ C:\Program Files\Java\jdk-17 ]

	-> 왼쪽 사이드 메뉴의 [+] 접속 아이콘을 클릭하여 접속 - 사용자계정으로 로그인
            -> [워크시트] 에 SQL문을 작성한 후 실행하면 아래 [질의결과]탭을 통해 결과를 알려 줌. - PhpMyadmin 처럼 버튼 클릭으로 SQL을 제어하는 것이 아니라 결국 CLI처럼 SQL문을 직접작성하는 방식임.            
            -> 다만, 워크시트에 작성한 글씨는 마지막 명령문만 실행되므로.. 결과적으로 기존의 쿼리문은 그대로 남아 있어서 실습 히스토리를 기록하기에는 좋음. [ 워크시트의 작업코드를 파일.sql 로 저장 가능 ]

            -> 테이블을 선택하면 [열]탭으로 구조를 보여줌. [데이터]탭을 선택하면 데이터들을 볼 수있음. - 테이블의 제약조건, 인덱스 등을 탭으로 확인할 수 있어 좋음.

	* 기존 BOARD, MEMBER 테이블에 대한 몇가지 실습을 진행하는 정도로 .. 마무리.

	* 테이블간의 RELATION 관계를 연결해보는 외래키 실습이 필요함. [ 회원명단 테이블, 회원ID포함된 게시글 테이블    OR     게시글 테이블, 게시글 첨부사진들 테이블] ~>
               -- 간단한 실습은 회원명단과 작성자ID가 포함된 BOARD2 테이블로 외래키 FK 실습 ..  추후 최종 웹쇼핑몰 프로젝트에서 게시글,게시글 첨부사진,회원정보 테이블간의 FK 적용 연습가능

	######## 외래키 실습 [ 테이블간의 관계만들기 ]   (D:\수업자료\WebJSP\Oracle 실습.sql 파일) ##########################################################################################################

	> "USER"테이블 [ USER_ID (PK), USER_PW, USER_LEVEL, REG_DATE ]
	> "NOTE"테이블 [ NOTE_NO (PK), TITLE, MSG, USER_ID (FK), WRITE_DATE ]

	* "USER"테이블 생성
	CREATE TABLE NOTE_USER (
    		USER_ID VARCHAR2(10),
    		USER_PW VARCHAR2(10) NOT NULL,
    		USER_LEVEL NUMBER(3) DEFAULT 1,
    		REG_DATE DATE DEFAULT SYSDATE,
    		CONSTRAINT PK_UID PRIMARY KEY (USER_ID)
	);
    

	* "NOTE"테이블 생성
	CREATE TABLE NOTE (
    		NOTE_NO NUMBER(10) PRIMARY KEY,
    		TITLE VARCHAR2(20) NOT NULL,
    		MSG VARCHAR2(4000),
    		USER_ID VARCHAR2(10),
    		WRITE_DATE TIMESTAMP DEFAULT SYSDATE,
    		CONSTRAINT FK_UID FOREIGN KEY (USER_ID) REFERENCES NOTE_USER(USER_ID) ON DELETE CASCADE    
	);


	* NOTE테이블에서 사용할 자동증가값 변수 SEQUENCE 만들기
	CREATE SEQUENCE SEQ_NOTE_NO INCREMENT BY 1 START WITH 1;


	/* 회원정보 테이블에 사용자 2명 추가 (DEFAULT 값 지정된 컬럼은 생략)*/
	INSERT INTO NOTE_USER (USER_ID, USER_PW) VALUES('sam','1111');
	INSERT INTO NOTE_USER (USER_ID, USER_PW) VALUES('robin','2222');


	-- 잘 추가 되었는지 확인 
	SELECT * FROM NOTE_USER;


	/* 노트글 추가해보기 - 모든 입력값을 직접 모두 설정*/
	INSERT INTO NOTE VALUES(SEQ_NOTE_NO.NEXTVAL, 'Hello','Nice to meet you', 'sam', SYSDATE);


	/* 외래키의 효과 확인 - 회원테이블에 없는 회원ID로 노트글 저장해보기 */ 
	INSERT INTO NOTE VALUES(SEQ_NOTE_NO.NEXTVAL, '무결성 확인','회원이 아닌 정보로 저장을 시도해보기', 'HONG', SYSDATE); --'HONG'은 회원테이블에 없음.

		오류 보고 -
		ORA-02291: 무결성 제약조건(MRHI.FK_UID)이 위배되었습니다- 부모 키가 없습니다

	-- 노트 테이블 다시 확인 - 위 INSERT가 되지 않았음을 확인.
	SELECT * FROM NOTE;


	/* 다른 사용자의 노트글 추가하기 */
	INSERT INTO NOTE VALUES(SEQ_NOTE_NO.NEXTVAL, '새로운 글','안녕하세요 로빈입니다.', 'robin', SYSDATE);
    
	-- 잘 추가 되었는지 확인 
	SELECT * FROM NOTE;

	/* 회원이 제거되었을때 회원의 노트글 자동삭제 여부 테스트 - 외래키 지정할 때 설정값 ON DELETE CASCADE 효과 확인 [안 지우고 싶다면 ON DELETE SET NULL ]*/
	DELETE FROM NOTE_USER WHERE USER_ID='robin';

	-- 회원정보 테이블과 노트글 테이블 모두 확인 - 'robin' 회원정보가 삭제되었으며 .. relation 되어 있는 'robin'의 노트글도 자동 삭제된 것을 확인해보기
	SELECT * FROM NOTE_USER;
	SELECT * FROM NOTE;



	/* 회원등급(USER_LEVEL)이 2레벨 이상인 회원의 NOTE글 가져와 보기 (단, 회원등급도 같이 결과표(ResultSet)로 조회되도록)[ 여러테이블을 결합(JOIN)하여 데이터 조회하기 ]*/
	/* 노트글 테이블에는 회원ID만 있기에 그 회원의 등급(USER_LEVEL)을 WHEHR 조건으로 부여할 수도 없고 등급컬럼이 없기에 값을 가져올 수도 없어서 두 테이블을 결합하여 조회해야 함 */

	-- 우선 두 테이블에서 원하는 컬룸들만 뽑아서 결과표로 조회하는 쿼리문 연습 - NOTE테이블을 T1이라고 지정하고, NOTE_USER 테이블을 T2라고 지정하여 JOIN 해오기..
	SELECT T1.TITLE, T1.MSG, T1.USER_ID, T2.USER_LEVEL FROM NOTE T1 JOIN NOTE_USER T2 ON T1.USER_ID=T2.USER_ID;
	

	/* 사용자 계정을 조금 더 추가하며 회원등급을 다르게 지정*/
	INSERT INTO NOTE_USER (USER_ID, USER_PW, USER_LEVEL) VALUES('hong','3333',2);
	INSERT INTO NOTE_USER (USER_ID, USER_PW, USER_LEVEL) VALUES('park','3333',3);

	-- 회원정보 확인
	SELECT * FROM NOTE_USER;

	/* 회원별로 노트글 추가 */
	INSERT INTO NOTE VALUES(SEQ_NOTE_NO.NEXTVAL, '홍길동','홍길동입니다.', 'hong', SYSDATE);
	INSERT INTO NOTE VALUES(SEQ_NOTE_NO.NEXTVAL, '박지성','박지성입니다.', 'park', SYSDATE);

	-- 노트글 확인
	SELECT * FROM NOTE;

	/* JOIN을 이용하여 등급2 이상인 회원의 노트글만 가져오기 [ 가져올 COLUMN : 노트글의 모든 컬룸과 회원정보 중 등급컬룸 ] */
	SELECT T1.*, T2.USER_LEVEL FROM NOTE T1 JOIN NOTE_USER T2 ON T1.USER_ID=T2.USER_ID WHERE T2.USER_LEVEL >= 2;


	
	***** 참고 : order 를 하지 않으면 디비에 쌓여있는 순서대로 나옴.  db는 중간에 공간이 있으면 거기에 집어 넣기 때문에 순서대로 쌓이지 않을 수도 있음 ***********
